name: Laravel

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    laravel:
        name: Laravel (PHP ${{ matrix.php-versions }})
        runs-on: ubuntu-latest
        env:
            BROADCAST_DRIVER: log
            CACHE_DRIVER: redis
            QUEUE_CONNECTION: redis
            SESSION_DRIVER: redis
            DB_CONNECTION: pgsql
            DB_HOST: localhost
            DB_PASSWORD: postgres
            DB_USERNAME: postgres
            DB_DATABASE: postgres
        services:
            postgres:
                image: postgres:13
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_DB: postgres
                ports:
                    - 5432/tcp
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3
            redis:
                image: redis
                ports:
                    - 6379/tcp
                options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3
        strategy:
            fail-fast: false
            matrix:
                php-versions: ["8.0"]
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Setup PHP, with composer and extensions
              uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
              with:
                  php-version: ${{ matrix.php-versions }}
                  extensions: mbstring, dom, fileinfo, pgsql
                  coverage: xdebug #optional
                  tools: php-cs-fixer, phpunit, phpcs
            - name: Get composer cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"
            - name: Cache composer dependencies
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  # Use composer.json for key, if composer.lock is not committed.
                  # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-
            - name: Install Composer dependencies
              run: composer install --no-progress --prefer-dist --optimize-autoloader
            - name: Prepare the application
              run: |
                  php -r "file_exists('.env') || copy('.env.example', '.env');"
                  php artisan key:generate
            - name: Clear Config
              run: php artisan config:clear
            - name: Run Migration
              run: php artisan migrate -v
              env:
                  DB_PORT: ${{ job.services.postgres.ports[5432] }}
                  REDIS_PORT: ${{ job.services.redis.ports['6379'] }}
            - name: Check PHP code style
              continue-on-error: false
              run: phpcs --standard=phpcs.xml
            - name: Test with phpunit
              run: vendor/bin/phpunit --coverage-text
              env:
                  DB_PORT: ${{ job.services.postgres.ports[5432] }}
                  REDIS_PORT: ${{ job.services.redis.ports['6379'] }}
            - name: Check php-cs-fixer
              run: php-cs-fixer fix --config=.php_cs.php
